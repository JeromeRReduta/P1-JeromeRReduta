<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="hostname__reader_8c" kind="file" language="C++">
    <compoundname>hostname_reader.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes refid="logger_8h" local="yes">logger.h</includes>
    <includes refid="util_8h" local="yes">util.h</includes>
    <includes refid="hostname__reader_8h" local="yes">hostname_reader.h</includes>
    <incdepgraph>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>hostname_reader.c</label>
        <link refid="hostname__reader_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>hostname_reader.h</label>
        <link refid="hostname__reader_8h"/>
      </node>
      <node id="9">
        <label>sys/types.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="8">
        <label>util.h</label>
        <link refid="util_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>unistd.h</label>
      </node>
      <node id="5">
        <label>logger.h</label>
        <link refid="logger_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structHost__R__Private__Data" prot="public">Host_R_Private_Data</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="hostname__reader_8c_1a306690ab6baed813651f849ac790685e" prot="public" static="no" mutable="no">
        <type><ref refid="structHost__R__Public__Data" kindref="compound">Host_R_Public_Data</ref> *</type>
        <definition>Host_R_Public_Data* host_r_globals</definition>
        <argsstring></argsstring>
        <name>host_r_globals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ptrs to public and private data </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hostname_reader.c" line="31" column="20" bodyfile="hostname_reader.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hostname__reader_8c_1a37ebb1611539d02849609f61229cbb4b" prot="public" static="yes" mutable="no">
        <type><ref refid="structHost__R__Private__Data" kindref="compound">Host_R_Private_Data</ref> *</type>
        <definition>Host_R_Private_Data* host_r_locals</definition>
        <argsstring></argsstring>
        <name>host_r_locals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hostname_reader.c" line="32" column="28" bodyfile="hostname_reader.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hostname__reader_8c_1a483b425df9e96f8fc5fbba8c9a713807" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* host_r_path</definition>
        <argsstring></argsstring>
        <name>host_r_path</name>
        <initializer>= &quot;sys/kernel/hostname&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constants </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hostname_reader.c" line="35" column="12" bodyfile="hostname_reader.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="hostname__reader_8c_1a478de34066376a68596ec9af7d9283d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void host_r_safe_init_data</definition>
        <argsstring>(char *proc_dir, size_t buf_sz)</argsstring>
        <name>host_r_safe_init_data</name>
        <param>
          <type>char *</type>
          <declname>proc_dir</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_sz</declname>
        </param>
        <briefdescription>
<para>Initalizes public and private structs, ONLY if these structs are not already initalized. </para>
        </briefdescription>
        <detaileddescription>
<para>Func prototypes</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>proc_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The proc dir </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf_sz</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hostname_reader.c" line="57" column="6" bodyfile="hostname_reader.c" bodystart="57" bodyend="68" declfile="hostname_reader.c" declline="40" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hostname__reader_8c_1a4ebc3da709e63b63b050db2a33cfd66f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void host_r_init_data</definition>
        <argsstring>(char *proc_dir, size_t buf_sz)</argsstring>
        <name>host_r_init_data</name>
        <param>
          <type>char *</type>
          <declname>proc_dir</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_sz</declname>
        </param>
        <briefdescription>
<para>Initializes public and private structs, including copying proc_dir and buf_sz values from proc_fs to this file. This includes finding the hostname. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>proc_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>proc directory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf_sz</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hostname_reader.c" line="77" column="6" bodyfile="hostname_reader.c" bodystart="77" bodyend="101" declfile="hostname_reader.c" declline="41" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hostname__reader_8c_1ab5f2a80f61b87d7128e64586ebf1d1e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void host_r_destroy_data</definition>
        <argsstring>()</argsstring>
        <name>host_r_destroy_data</name>
        <briefdescription>
<para>Resets all data in public and private structs (not constants though), including freeing allocated memory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hostname_reader.c" line="109" column="6" bodyfile="hostname_reader.c" bodystart="109" bodyend="113" declfile="hostname_reader.c" declline="43" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hostname__reader_8c_1abe2ee341224718aa137e765c1b9c9097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void host_r_reset_struct_internals</definition>
        <argsstring>()</argsstring>
        <name>host_r_reset_struct_internals</name>
        <briefdescription>
<para>Helper func for destroy_data() <linebreak/>
Frees dynamically allocated mem for struct&apos;s internal members. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hostname_reader.c" line="120" column="6" bodyfile="hostname_reader.c" bodystart="120" bodyend="139" declfile="hostname_reader.c" declline="44" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hostname__reader_8c_1a22ee2523f43fe608801e816c9fcae091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void host_r_reset_structs</definition>
        <argsstring>()</argsstring>
        <name>host_r_reset_structs</name>
        <briefdescription>
<para>Helper func for destroy_data() <linebreak/>
Frees and nulls public and private data structs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hostname_reader.c" line="145" column="6" bodyfile="hostname_reader.c" bodystart="145" bodyend="162" declfile="hostname_reader.c" declline="45" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hostname__reader_8c_1ad19f7d9f05c1414c91a594d9d48646ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * host_r_search</definition>
        <argsstring>()</argsstring>
        <name>host_r_search</name>
        <briefdescription>
<para>Finds hostname string and allocates memory for it. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>hostname string</para>
</simplesect>
<simplesect kind="note"><para>This allocates memory - need to free later </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hostname_reader.c" line="171" column="6" bodyfile="hostname_reader.c" bodystart="171" bodyend="190" declfile="hostname_reader.c" declline="47" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hostname__reader_8c_1a93e431bd80d3ec4e231f333013ba1660" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void log_info</definition>
        <argsstring>()</argsstring>
        <name>log_info</name>
        <briefdescription>
<para>Helper func, for logging all the public, private, and constant info in the file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hostname_reader.c" line="196" column="6" bodyfile="hostname_reader.c" bodystart="196" bodyend="225" declfile="hostname_reader.c" declline="49" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hostname__reader_8c_1ad3e37625138cbbeb38cd0da17f1f4114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_host_r_safe_init_data</definition>
        <argsstring>()</argsstring>
        <name>test_host_r_safe_init_data</name>
        <briefdescription>
<para>Tests <ref refid="hostname__reader_8c_1a478de34066376a68596ec9af7d9283d3" kindref="member">host_r_safe_init_data()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Confirmed success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hostname_reader.c" line="232" column="6" bodyfile="hostname_reader.c" bodystart="232" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="hostname__reader_8c_1aa39600c1411581b0000d38bfae4ea6e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_host_r_init_data</definition>
        <argsstring>()</argsstring>
        <name>test_host_r_init_data</name>
        <briefdescription>
<para>Tests <ref refid="hostname__reader_8c_1a4ebc3da709e63b63b050db2a33cfd66f" kindref="member">host_r_init_data()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Confirmed success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hostname_reader.c" line="256" column="6" bodyfile="hostname_reader.c" bodystart="256" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="hostname__reader_8c_1a23d8a1b21af607c5d06483b1e3fb38a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_host_r_destroy_data</definition>
        <argsstring>()</argsstring>
        <name>test_host_r_destroy_data</name>
        <briefdescription>
<para>Tests <ref refid="hostname__reader_8c_1ab5f2a80f61b87d7128e64586ebf1d1e0" kindref="member">host_r_destroy_data()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Confirmed success for:<orderedlist>
<listitem><para>Initializing data, then destroying it</para>
</listitem><listitem><para>Not initalizing data, then destroying it</para>
</listitem><listitem><para>Initalizing data, destroying it, and then trying to destroy it again (testing safety checks) </para>
</listitem></orderedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hostname_reader.c" line="276" column="6" bodyfile="hostname_reader.c" bodystart="276" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="hostname__reader_8c_1a2c7d9796cf01aebe50f9a3ea5a813186" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_host_r_search</definition>
        <argsstring>(char *real_proc_dir, size_t real_buf_sz)</argsstring>
        <name>test_host_r_search</name>
        <param>
          <type>char *</type>
          <declname>real_proc_dir</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>real_buf_sz</declname>
        </param>
        <briefdescription>
<para>Tests <ref refid="hostname__reader_8c_1ad19f7d9f05c1414c91a594d9d48646ed" kindref="member">host_r_search()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>real_proc_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>actual proc directory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">real_buf_sz</parametername>
</parameternamelist>
<parameterdescription>
<para>actual buffer size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hostname_reader.c" line="303" column="6" bodyfile="hostname_reader.c" bodystart="303" bodyend="331"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>File for holding and returning a string representation of this OS&apos;s hostname. <linebreak/>
 File prefix is &quot;host_r&quot; </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logger_8h" kindref="compound">logger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hostname__reader_8h" kindref="compound">hostname_reader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="structHost__R__Private__Data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>proc_dir;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_sz;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">}<sp/><ref refid="structHost__R__Private__Data" kindref="compound">Host_R_Private_Data</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="structHost__R__Public__Data" kindref="compound">Host_R_Public_Data</ref>*<sp/><ref refid="hostname__reader_8c_1a306690ab6baed813651f849ac790685e" kindref="member">host_r_globals</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structHost__R__Private__Data" kindref="compound">Host_R_Private_Data</ref>*<sp/>host_r_locals;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="hostname__reader_8c_1a483b425df9e96f8fc5fbba8c9a713807" kindref="member">host_r_path</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;sys/kernel/hostname&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>Want<sp/>to<sp/>order<sp/>funcs<sp/>not<sp/>by<sp/>public/private,<sp/>but<sp/>in<sp/>terms<sp/>of<sp/>funcs<sp/>and<sp/>their<sp/>related<sp/>sub-funcs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hostname__reader_8c_1a478de34066376a68596ec9af7d9283d3" kindref="member">host_r_safe_init_data</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*proc_dir,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_sz);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hostname__reader_8c_1a4ebc3da709e63b63b050db2a33cfd66f" kindref="member">host_r_init_data</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*proc_dir,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_sz);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hostname__reader_8c_1ab5f2a80f61b87d7128e64586ebf1d1e0" kindref="member">host_r_destroy_data</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hostname__reader_8c_1abe2ee341224718aa137e765c1b9c9097" kindref="member">host_r_reset_struct_internals</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hostname__reader_8c_1a22ee2523f43fe608801e816c9fcae091" kindref="member">host_r_reset_structs</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="hostname__reader_8c_1ad19f7d9f05c1414c91a594d9d48646ed" kindref="member">host_r_search</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hostname__reader_8c_1a93e431bd80d3ec4e231f333013ba1660" kindref="member">log_info</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hostname__reader_8c_1a478de34066376a68596ec9af7d9283d3" kindref="member">host_r_safe_init_data</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*proc_dir,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_sz)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Case:<sp/>Globals<sp/>or<sp/>locals<sp/>already<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hostname__reader_8c_1a306690ab6baed813651f849ac790685e" kindref="member">host_r_globals</ref><sp/>!=<sp/>NULL<sp/>||<sp/>host_r_locals<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;WARNING<sp/>-<sp/>GLOBALS<sp/>AND/OR<sp/>LOCALS<sp/>IS<sp/>ALREADY<sp/>INITALIZED<sp/>-<sp/>will<sp/>not<sp/>overwrite<sp/>data\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Case:<sp/>Globals<sp/>and<sp/>locals<sp/>are<sp/>both<sp/>null<sp/>(safe<sp/>to<sp/>initialize)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;GLOBALS<sp/>AND<sp/>LOCALS<sp/>ARE<sp/>NULL<sp/>-<sp/>INITALIZING\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a4ebc3da709e63b63b050db2a33cfd66f" kindref="member">host_r_init_data</ref>(proc_dir,<sp/>buf_sz);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hostname__reader_8c_1a4ebc3da709e63b63b050db2a33cfd66f" kindref="member">host_r_init_data</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*proc_dir,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_sz)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a306690ab6baed813651f849ac790685e" kindref="member">host_r_globals</ref><sp/>=<sp/>calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structHost__R__Public__Data" kindref="compound">Host_R_Public_Data</ref>));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>host_r_locals<sp/>=<sp/>calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structHost__R__Private__Data" kindref="compound">Host_R_Private_Data</ref>));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hostname__reader_8c_1a306690ab6baed813651f849ac790685e" kindref="member">host_r_globals</ref><sp/>==<sp/>NULL<sp/>||<sp/>host_r_locals<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;OUT<sp/>OF<sp/>MEM;<sp/>RETURNING\n&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>destroy_data()<sp/>is<sp/>called<sp/>every<sp/>time<sp/>display<sp/>refreshes,<sp/>so<sp/>don&apos;t<sp/>have<sp/>to<sp/>destroy<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>host_r_locals-&gt;<ref refid="structHost__R__Private__Data_1ae1147ae7428b8f8d981ff6be77621b7d" kindref="member">proc_dir</ref><sp/>=<sp/>strdup(proc_dir);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(host_r_locals-&gt;<ref refid="structHost__R__Private__Data_1ae1147ae7428b8f8d981ff6be77621b7d" kindref="member">proc_dir</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;OUT<sp/>OF<sp/>MEM;<sp/>RETURNING\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>host_r_locals-&gt;<ref refid="structHost__R__Private__Data_1a27fcace614ab682c61ac1aac12766ec9" kindref="member">buf_sz</ref><sp/>=<sp/>buf_sz;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>this<sp/>depends<sp/>on<sp/>proc_dir<sp/>and<sp/>buf_sz,<sp/>so<sp/>have<sp/>to<sp/>put<sp/>this<sp/>line<sp/>after</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>initializing<sp/>those<sp/>vars<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a306690ab6baed813651f849ac790685e" kindref="member">host_r_globals</ref>-&gt;<ref refid="structHost__R__Public__Data_1a5aa3054ceb472b43b9b45d9eed0abb22" kindref="member">hostname</ref><sp/>=<sp/><ref refid="hostname__reader_8c_1ad19f7d9f05c1414c91a594d9d48646ed" kindref="member">host_r_search</ref>();<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>Plan<sp/>is<sp/>to<sp/>safe_init()<sp/>data<sp/>in<sp/>procfs<sp/>funcs<sp/>and<sp/>destroy<sp/>data<sp/>@<sp/>end<sp/>of<sp/>every<sp/>display_refresh(),<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>other<sp/>destroy()<sp/>funcs<sp/>are<sp/>called<sp/>(near<sp/>bottom<sp/>of<sp/>file?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hostname__reader_8c_1ab5f2a80f61b87d7128e64586ebf1d1e0" kindref="member">host_r_destroy_data</ref>()</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1abe2ee341224718aa137e765c1b9c9097" kindref="member">host_r_reset_struct_internals</ref>();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a22ee2523f43fe608801e816c9fcae091" kindref="member">host_r_reset_structs</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hostname__reader_8c_1abe2ee341224718aa137e765c1b9c9097" kindref="member">host_r_reset_struct_internals</ref>()</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1a388edf12256bf73c3a8ee9734c3bd841" kindref="member">LOG</ref>(</highlight><highlight class="stringliteral">&quot;ARE<sp/>EITHER<sp/>PTRS<sp/>NULL<sp/>RN?\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t-&gt;globals:<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t-&gt;locals:<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="hostname__reader_8c_1a306690ab6baed813651f849ac790685e" kindref="member">host_r_globals</ref><sp/>==<sp/>NULL<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host_r_locals<sp/>==<sp/>NULL<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hostname__reader_8c_1a306690ab6baed813651f849ac790685e" kindref="member">host_r_globals</ref><sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/><ref refid="hostname__reader_8c_1a306690ab6baed813651f849ac790685e" kindref="member">host_r_globals</ref>-&gt;<ref refid="structHost__R__Public__Data_1a5aa3054ceb472b43b9b45d9eed0abb22" kindref="member">hostname</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8h_1a388edf12256bf73c3a8ee9734c3bd841" kindref="member">LOG</ref>(</highlight><highlight class="stringliteral">&quot;host_r_globals-&gt;hostname<sp/>=<sp/>&apos;%s&apos;,<sp/>now<sp/>freeing\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="hostname__reader_8c_1a306690ab6baed813651f849ac790685e" kindref="member">host_r_globals</ref>-&gt;<ref refid="structHost__R__Public__Data_1a5aa3054ceb472b43b9b45d9eed0abb22" kindref="member">hostname</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="hostname__reader_8c_1a306690ab6baed813651f849ac790685e" kindref="member">host_r_globals</ref>-&gt;<ref refid="structHost__R__Public__Data_1a5aa3054ceb472b43b9b45d9eed0abb22" kindref="member">hostname</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(host_r_locals<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>host_r_locals-&gt;<ref refid="structHost__R__Private__Data_1ae1147ae7428b8f8d981ff6be77621b7d" kindref="member">proc_dir</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8h_1a388edf12256bf73c3a8ee9734c3bd841" kindref="member">LOG</ref>(</highlight><highlight class="stringliteral">&quot;host_r_locals-&gt;proc_dir<sp/>=<sp/>&apos;%s&apos;,<sp/>now<sp/>freeing\n&quot;</highlight><highlight class="normal">,<sp/>host_r_locals-&gt;<ref refid="structHost__R__Private__Data_1ae1147ae7428b8f8d981ff6be77621b7d" kindref="member">proc_dir</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(host_r_locals-&gt;<ref refid="structHost__R__Private__Data_1ae1147ae7428b8f8d981ff6be77621b7d" kindref="member">proc_dir</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hostname__reader_8c_1a22ee2523f43fe608801e816c9fcae091" kindref="member">host_r_reset_structs</ref>()</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hostname__reader_8c_1a306690ab6baed813651f849ac790685e" kindref="member">host_r_globals</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;WARNING<sp/>-<sp/>GLOBALS<sp/>ALREADY<sp/>NULL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="hostname__reader_8c_1a306690ab6baed813651f849ac790685e" kindref="member">host_r_globals</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a306690ab6baed813651f849ac790685e" kindref="member">host_r_globals</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(host_r_locals<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;WARNING<sp/>-<sp/>GLOBALS<sp/>ALREADY<sp/>NULL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(host_r_locals);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host_r_locals<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="hostname__reader_8c_1ad19f7d9f05c1414c91a594d9d48646ed" kindref="member">host_r_search</ref>()</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;OPENING<sp/>HOSTNAME_FD\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hostname_fd<sp/>=<sp/>open_path(host_r_locals-&gt;<ref refid="structHost__R__Private__Data_1ae1147ae7428b8f8d981ff6be77621b7d" kindref="member">proc_dir</ref>,<sp/><ref refid="hostname__reader_8c_1a483b425df9e96f8fc5fbba8c9a713807" kindref="member">host_r_path</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hostname_fd<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;ERROR<sp/>-<sp/>PATH<sp/>IS<sp/>INVALID;<sp/>RETURNING<sp/>NULL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(hostname_fd);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hostname_buf[65];</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;READING<sp/>LINE\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>ssize_t<sp/>read_sz<sp/>=<sp/>lineread(hostname_fd,<sp/>hostname_buf,<sp/>65);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>close(hostname_fd);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;RETURNING\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>read_sz<sp/>&gt;<sp/>0<sp/>?<sp/>strdup(hostname_buf)<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hostname__reader_8c_1a93e431bd80d3ec4e231f333013ba1660" kindref="member">log_info</ref>()</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hostname__reader_8c_1a306690ab6baed813651f849ac790685e" kindref="member">host_r_globals</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8h_1a388edf12256bf73c3a8ee9734c3bd841" kindref="member">LOG</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;GLOBAL<sp/>INFO:<sp/>{\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\thostname<sp/>=<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;}\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="hostname__reader_8c_1a306690ab6baed813651f849ac790685e" kindref="member">host_r_globals</ref>-&gt;<ref refid="structHost__R__Public__Data_1a5aa3054ceb472b43b9b45d9eed0abb22" kindref="member">hostname</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8h_1a388edf12256bf73c3a8ee9734c3bd841" kindref="member">LOG</ref>(</highlight><highlight class="stringliteral">&quot;GLOBAL<sp/>INFO<sp/>PTR<sp/>IS<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="hostname__reader_8c_1a306690ab6baed813651f849ac790685e" kindref="member">host_r_globals</ref><sp/>==<sp/>NULL<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;NOT<sp/>ACTUALLY<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(host_r_locals<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8h_1a388edf12256bf73c3a8ee9734c3bd841" kindref="member">LOG</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;LOCAL<sp/>INFO:<sp/>{\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\tproc_dir<sp/>=<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\tbuf_sz<sp/>=<sp/>%lu\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host_r_locals-&gt;<ref refid="structHost__R__Private__Data_1ae1147ae7428b8f8d981ff6be77621b7d" kindref="member">proc_dir</ref>,<sp/>host_r_locals-&gt;<ref refid="structHost__R__Private__Data_1a27fcace614ab682c61ac1aac12766ec9" kindref="member">buf_sz</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8h_1a388edf12256bf73c3a8ee9734c3bd841" kindref="member">LOG</ref>(</highlight><highlight class="stringliteral">&quot;LOCAL<sp/>INFO<sp/>PTR<sp/>IS:<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>host_r_locals<sp/>==<sp/>NULL<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;NOT<sp/>ACTUALLY<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1a388edf12256bf73c3a8ee9734c3bd841" kindref="member">LOG</ref>(</highlight><highlight class="stringliteral">&quot;\nCONSTANTS:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t-&gt;host_r_path<sp/>=<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="hostname__reader_8c_1a483b425df9e96f8fc5fbba8c9a713807" kindref="member">host_r_path</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hostname__reader_8c_1ad3e37625138cbbeb38cd0da17f1f4114" kindref="member">test_host_r_safe_init_data</ref>()</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;BEFORE<sp/>INITALIZING\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a93e431bd80d3ec4e231f333013ba1660" kindref="member">log_info</ref>();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;AFTER<sp/>SAFE_INIT<sp/>1x\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a478de34066376a68596ec9af7d9283d3" kindref="member">host_r_safe_init_data</ref>(</highlight><highlight class="stringliteral">&quot;fakeproc&quot;</highlight><highlight class="normal">,<sp/>256);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a93e431bd80d3ec4e231f333013ba1660" kindref="member">log_info</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;AFTER<sp/>SAFE_INIT<sp/>2x<sp/>-<sp/>SHOULD<sp/>NOT<sp/>OVERWRITE<sp/>DATA\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a478de34066376a68596ec9af7d9283d3" kindref="member">host_r_safe_init_data</ref>(</highlight><highlight class="stringliteral">&quot;should-not-appear&quot;</highlight><highlight class="normal">,<sp/>1024);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a93e431bd80d3ec4e231f333013ba1660" kindref="member">log_info</ref>();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;AFTER<sp/>DESTROYING<sp/>AND<sp/>ATTEMPTING<sp/>SAFE_INIT<sp/>AGAIN\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1ab5f2a80f61b87d7128e64586ebf1d1e0" kindref="member">host_r_destroy_data</ref>();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a478de34066376a68596ec9af7d9283d3" kindref="member">host_r_safe_init_data</ref>(</highlight><highlight class="stringliteral">&quot;overwritten-after-destroy-data&quot;</highlight><highlight class="normal">,<sp/>512);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a93e431bd80d3ec4e231f333013ba1660" kindref="member">log_info</ref>();</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hostname__reader_8c_1aa39600c1411581b0000d38bfae4ea6e4" kindref="member">test_host_r_init_data</ref>()</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a93e431bd80d3ec4e231f333013ba1660" kindref="member">log_info</ref>();<sp/></highlight><highlight class="comment">//<sp/>Both<sp/>ptrs<sp/>should<sp/>be<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a4ebc3da709e63b63b050db2a33cfd66f" kindref="member">host_r_init_data</ref>(</highlight><highlight class="stringliteral">&quot;/proc_but_not&quot;</highlight><highlight class="normal">,<sp/>1024);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a93e431bd80d3ec4e231f333013ba1660" kindref="member">log_info</ref>();<sp/></highlight><highlight class="comment">//<sp/>Each<sp/>ptr<sp/>should<sp/>have<sp/>given<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hostname__reader_8c_1a23d8a1b21af607c5d06483b1e3fb38a2" kindref="member">test_host_r_destroy_data</ref>()</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;BEFORE<sp/>INITALIZING:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a93e431bd80d3ec4e231f333013ba1660" kindref="member">log_info</ref>();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a4ebc3da709e63b63b050db2a33cfd66f" kindref="member">host_r_init_data</ref>(</highlight><highlight class="stringliteral">&quot;fake-proc&quot;</highlight><highlight class="normal">,<sp/>256);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;AFTER<sp/>INITALIZING:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a93e431bd80d3ec4e231f333013ba1660" kindref="member">log_info</ref>();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1ab5f2a80f61b87d7128e64586ebf1d1e0" kindref="member">host_r_destroy_data</ref>();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;AFTER<sp/>FREEING:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a93e431bd80d3ec4e231f333013ba1660" kindref="member">log_info</ref>();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;RUNNING<sp/>DESTROY<sp/>AGAIN<sp/>ON<sp/>PURPOSE,<sp/>TO<sp/>SEE<sp/>IF<sp/>SAFETY<sp/>CHECKS<sp/>STOP<sp/>ME\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1ab5f2a80f61b87d7128e64586ebf1d1e0" kindref="member">host_r_destroy_data</ref>();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;SO<sp/>FAR<sp/>SO<sp/>GOOD\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a93e431bd80d3ec4e231f333013ba1660" kindref="member">log_info</ref>();</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hostname__reader_8c_1a2c7d9796cf01aebe50f9a3ea5a813186" kindref="member">test_host_r_search</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*real_proc_dir,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>real_buf_sz)</highlight></codeline>
<codeline lineno="304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1a388edf12256bf73c3a8ee9734c3bd841" kindref="member">LOG</ref>(</highlight><highlight class="stringliteral">&quot;INPUTS:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-&gt;real_proc_dir:<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-&gt;real_buf_sz:<sp/>&apos;%lu&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>real_proc_dir,<sp/>real_buf_sz);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;BEFORE<sp/>INITALIZING:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a93e431bd80d3ec4e231f333013ba1660" kindref="member">log_info</ref>();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;INITIALIZING<sp/>W/<sp/>BAD<sp/>PROC<sp/>-<sp/>SHOULD<sp/>RETURN<sp/>NULL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a478de34066376a68596ec9af7d9283d3" kindref="member">host_r_safe_init_data</ref>(</highlight><highlight class="stringliteral">&quot;bad-proc&quot;</highlight><highlight class="normal">,<sp/>256);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>bad_proc_search<sp/>=<sp/><ref refid="hostname__reader_8c_1ad19f7d9f05c1414c91a594d9d48646ed" kindref="member">host_r_search</ref>();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1a388edf12256bf73c3a8ee9734c3bd841" kindref="member">LOG</ref>(</highlight><highlight class="stringliteral">&quot;bad_proc_search:<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>bad_proc_search);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1ab5f2a80f61b87d7128e64586ebf1d1e0" kindref="member">host_r_destroy_data</ref>();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1ac60a33fb6244dfed75a5aaab504b8968" kindref="member">LOGP</ref>(</highlight><highlight class="stringliteral">&quot;INITALIZING<sp/>W/<sp/>ACTUAL<sp/>PROC<sp/>-<sp/>SHOULD<sp/>RETURN<sp/>KEVINM\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1a478de34066376a68596ec9af7d9283d3" kindref="member">host_r_safe_init_data</ref>(real_proc_dir,<sp/>real_buf_sz);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*real_proc_search<sp/>=<sp/><ref refid="hostname__reader_8c_1ad19f7d9f05c1414c91a594d9d48646ed" kindref="member">host_r_search</ref>();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8h_1a388edf12256bf73c3a8ee9734c3bd841" kindref="member">LOG</ref>(</highlight><highlight class="stringliteral">&quot;real_proc_search:<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>real_proc_search);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hostname__reader_8c_1ab5f2a80f61b87d7128e64586ebf1d1e0" kindref="member">host_r_destroy_data</ref>();</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="hostname_reader.c"/>
  </compounddef>
</doxygen>
