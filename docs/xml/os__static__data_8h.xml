<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="os__static__data_8h" kind="file" language="C++">
    <compoundname>os_static_data.h</compoundname>
    <includedby refid="os__static__data_8c" local="yes">os_static_data.c</includedby>
      <sectiondef kind="func">
      <memberdef kind="function" id="os__static__data_8h_1a5212d5d4e362f321b6074b6681bb5c87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_os_s_init_data</definition>
        <argsstring>()</argsstring>
        <name>test_os_s_init_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Public functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="os_static_data.h" line="11" column="6" declfile="os_static_data.h" declline="11" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="os__static__data_8h_1a4311fb580c66d4fd9e784a9058b2580d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_os_s_destroy_data</definition>
        <argsstring>()</argsstring>
        <name>test_os_s_destroy_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="os_static_data.h" line="12" column="6" declfile="os_static_data.h" declline="12" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="os__static__data_8h_1a70c631749674557111741412fcf82ece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_os_s_safe_init_data</definition>
        <argsstring>()</argsstring>
        <name>test_os_s_safe_init_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="os_static_data.h" line="13" column="6" declfile="os_static_data.h" declline="13" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="os__static__data_8h_1a77e544f09d764ab0841af2878c0ecbc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_os_s_get_kernel</definition>
        <argsstring>(char *proc_dir, size_t buf_sz)</argsstring>
        <name>test_os_s_get_kernel</name>
        <param>
          <type>char *</type>
          <declname>proc_dir</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="os_static_data.h" line="15" column="6" declfile="os_static_data.h" declline="15" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="os__static__data_8h_1aa2ddb1c744b32d9700d2ff6ad7580ebb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_os_s_get_hostname</definition>
        <argsstring>(char *proc_dir, size_t buf_sz)</argsstring>
        <name>test_os_s_get_hostname</name>
        <param>
          <type>char *</type>
          <declname>proc_dir</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="os_static_data.h" line="17" column="6" declfile="os_static_data.h" declline="17" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="os__static__data_8h_1a14e6d465ccd937ceeb9ab2088efdf804" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void os_s_safe_init_data</definition>
        <argsstring>(char *proc_dir, size_t buf_sz)</argsstring>
        <name>os_s_safe_init_data</name>
        <param>
          <type>char *</type>
          <declname>proc_dir</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_sz</declname>
        </param>
        <briefdescription>
<para>Initalizes public and private structs, ONLY if these structs are not already initalized. </para>
        </briefdescription>
        <detaileddescription>
<para>Func prototypes</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>proc_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The proc dir </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf_sz</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="os_static_data.h" line="20" column="6" bodyfile="os_static_data.c" bodystart="75" bodyend="85" declfile="os_static_data.h" declline="20" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="os__static__data_8h_1a5dbb363c90a10feab4a3203c9d635b23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* os_s_get_hostname</definition>
        <argsstring>(char *proc_dir, size_t buf_sz)</argsstring>
        <name>os_s_get_hostname</name>
        <param>
          <type>char *</type>
          <declname>proc_dir</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="os_static_data.h" line="21" column="6" declfile="os_static_data.h" declline="21" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="os__static__data_8h_1a2e741c8cd9c4adcc58a839e816026d70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* os_s_get_kernel</definition>
        <argsstring>(char *proc_dir, size_t buf_sz)</argsstring>
        <name>os_s_get_kernel</name>
        <param>
          <type>char *</type>
          <declname>proc_dir</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="os_static_data.h" line="22" column="6" declfile="os_static_data.h" declline="22" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="os__static__data_8h_1a5451dcc22002ef086f13734fb822d52d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void os_s_destroy_data</definition>
        <argsstring>()</argsstring>
        <name>os_s_destroy_data</name>
        <briefdescription>
<para>Resets all data in public and private structs (not constants though), including freeing allocated memory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="os_static_data.h" line="23" column="6" bodyfile="os_static_data.c" bodystart="122" bodyend="126" declfile="os_static_data.h" declline="23" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="os__static__data_8h_1a27fedde249b2c6cd9afa12ab97fc4cf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* extract_token_before</definition>
        <argsstring>(char *line, char *delim)</argsstring>
        <name>extract_token_before</name>
        <param>
          <type>char *</type>
          <declname>line</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>delim</declname>
        </param>
        <briefdescription>
<para>{ function_description } </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>The line </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delim</parametername>
</parameternamelist>
<parameterdescription>
<para>The delimiter</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>{ description_of_the_return_value } </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="os_static_data.h" line="25" column="6" bodyfile="string_extractor.c" bodystart="20" bodyend="43" declfile="os_static_data.h" declline="25" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Header file for os_static_data.c </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_OS_STATIC_DATA_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_OS_STATIC_DATA_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="os__static__data_8h_1a5212d5d4e362f321b6074b6681bb5c87" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="os__static__data_8h_1a5212d5d4e362f321b6074b6681bb5c87" kindref="member">test_os_s_init_data</ref>();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_os_s_destroy_data();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_os_s_safe_init_data();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_os_s_get_kernel(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*proc_dir,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_sz);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_os_s_get_hostname(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*proc_dir,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_sz);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="os__static__data_8h_1a14e6d465ccd937ceeb9ab2088efdf804" kindref="member">os_s_safe_init_data</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*proc_dir,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_sz);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*os_s_get_hostname(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*proc_dir,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_sz);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*os_s_get_kernel(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*proc_dir,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_sz);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="os__static__data_8h_1a5451dcc22002ef086f13734fb822d52d" kindref="member">os_s_destroy_data</ref>();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="os__static__data_8h_1a27fedde249b2c6cd9afa12ab97fc4cf2" kindref="member">extract_token_before</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*line,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*delim);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="os_static_data.h"/>
  </compounddef>
</doxygen>
