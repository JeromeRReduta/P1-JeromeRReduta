<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="mem__usage_8h" kind="file" language="C++">
    <compoundname>mem_usage.h</compoundname>
    <includedby refid="mem__usage_8c" local="yes">mem_usage.c</includedby>
    <includedby refid="procfs_8c" local="yes">procfs.c</includedby>
      <sectiondef kind="func">
      <memberdef kind="function" id="mem__usage_8h_1a058863191ac7cba31bf85645c2bf0de9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mem_init</definition>
        <argsstring>(struct mem_stats *mstats, char *proc_dir)</argsstring>
        <name>mem_init</name>
        <param>
          <type>struct <ref refid="structmem__stats" kindref="compound">mem_stats</ref> *</type>
          <declname>mstats</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>proc_dir</declname>
        </param>
        <briefdescription>
<para>Initalizes <ref refid="structmem__stats" kindref="compound">mem_stats</ref> struct with info from proc_dir/meminfo. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mstats</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmem__stats" kindref="compound">mem_stats</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proc_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>proc directory </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mem_usage.h" line="13" column="6" bodyfile="mem_usage.c" bodystart="52" bodyend="60" declfile="mem_usage.h" declline="13" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mem__usage_8h_1af208b8748193352865b1c6de912b3a4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mem_log_stats</definition>
        <argsstring>(struct mem_stats *mstats)</argsstring>
        <name>mem_log_stats</name>
        <param>
          <type>struct <ref refid="structmem__stats" kindref="compound">mem_stats</ref> *</type>
          <declname>mstats</declname>
        </param>
        <briefdescription>
<para>Convience function, for debugging. Logs all info in <ref refid="structmem__stats" kindref="compound">mem_stats</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mstats</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmem__stats" kindref="compound">mem_stats</ref> struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mem_usage.h" line="14" column="6" bodyfile="mem_usage.c" bodystart="117" bodyend="123" declfile="mem_usage.h" declline="14" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_MEM_USAGE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_MEM_USAGE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Apparently<sp/>if<sp/>I<sp/>do<sp/>this<sp/>a<sp/>compiler<sp/>warning<sp/>goes<sp/>away</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Based<sp/>on<sp/>advice<sp/>from<sp/>https://stackoverflow.com/questions/16831605/strange-compiler-warning-c-warning-struct-declared-inside-parameter-list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>time,<sp/>making<sp/>it<sp/>NOT<sp/>extern<sp/>makes<sp/>warnings<sp/>go<sp/>away</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmem__stats" kindref="compound">mem_stats</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mem_init(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmem__stats" kindref="compound">mem_stats</ref><sp/>*mstats,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*proc_dir);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mem_log_stats(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmem__stats" kindref="compound">mem_stats</ref><sp/>*mstats);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="mem_usage.h"/>
  </compounddef>
</doxygen>
