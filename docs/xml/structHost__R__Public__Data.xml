<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structHost__R__Public__Data" kind="struct" language="C++" prot="public">
    <compoundname>Host_R_Public_Data</compoundname>
    <includes refid="hostname__reader_8h" local="no">hostname_reader.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structHost__R__Public__Data_1a5aa3054ceb472b43b9b45d9eed0abb22" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* Host_R_Public_Data::hostname</definition>
        <argsstring></argsstring>
        <name>hostname</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>hostname of this OS - should be dynamically allocated to avoid garbage value string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hostname_reader.h" line="17" column="6" bodyfile="hostname_reader.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Struct holding public data </para>
    </detaileddescription>
    <location file="hostname_reader.h" line="14" column="1" bodyfile="hostname_reader.h" bodystart="14" bodyend="19"/>
    <listofallmembers>
      <member refid="structHost__R__Public__Data_1a5aa3054ceb472b43b9b45d9eed0abb22" prot="public" virt="non-virtual"><scope>Host_R_Public_Data</scope><name>hostname</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
