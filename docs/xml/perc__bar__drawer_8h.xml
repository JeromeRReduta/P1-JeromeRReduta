<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="perc__bar__drawer_8h" kind="file" language="C++">
    <compoundname>perc_bar_drawer.h</compoundname>
    <includedby refid="display_8c" local="yes">display.c</includedby>
    <includedby refid="perc__bar__drawer_8c" local="yes">perc_bar_drawer.c</includedby>
    <innerclass refid="structPercbar__Info" prot="public">Percbar_Info</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="perc__bar__drawer_8h_1a75fa1b7f896c1bc05d855ce9d9ceeffe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void draw_percbar</definition>
        <argsstring>(char *buf, double frac)</argsstring>
        <name>draw_percbar</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frac</declname>
        </param>
        <briefdescription>
<para>Draws the whole percent bar. </para>
        </briefdescription>
        <detaileddescription>
<para>@File file whose sole responsibility is to fill a buffer with percent bar info</para>
<para><linebreak/>
 Percent bar has the following format: <linebreak/>
 <preformatted>
[(20 # or -)] #.#%
</preformatted></para>
<para><linebreak/>
 E.g.: <preformatted>
[####----------------] 20.0%
</preformatted></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to put percent bar in </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">frac</parametername>
</parameternamelist>
<parameterdescription>
<para>fraction input </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="perc_bar_drawer.h" line="24" column="6" bodyfile="perc_bar_drawer.c" bodystart="31" bodyend="40" declfile="perc_bar_drawer.h" declline="24" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="perc__bar__drawer_8h_1a0af12e2913fbc8dbf5f6671eeb07978f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double get_safe_percent_from</definition>
        <argsstring>(double frac)</argsstring>
        <name>get_safe_percent_from</name>
        <param>
          <type>double</type>
          <declname>frac</declname>
        </param>
        <briefdescription>
<para>Converts frac into a percent. If frac is not a number, or is out of bounds (less than 0.0 or -0.0 or greater than 1.0), gives a default value instead. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">frac</parametername>
</parameternamelist>
<parameterdescription>
<para>The frac</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>frac * 100, or a default value if frac is not a number, or is out of bounds. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="perc_bar_drawer.h" line="25" column="8" bodyfile="perc_bar_drawer.c" bodystart="49" bodyend="62" declfile="perc_bar_drawer.h" declline="25" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="perc__bar__drawer_8h_1a5624878d9d46219552e5f07f5cbaff7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_num_of_hashes_from</definition>
        <argsstring>(double safe_percent, int max_hashes)</argsstring>
        <name>get_num_of_hashes_from</name>
        <param>
          <type>double</type>
          <declname>safe_percent</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_hashes</declname>
        </param>
        <briefdescription>
<para>Gets the number of hashes, based of safe_percent and max_hashes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">safe_percent</parametername>
</parameternamelist>
<parameterdescription>
<para>safe percent </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max_hashes</parametername>
</parameternamelist>
<parameterdescription>
<para>max hashes</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>safe_percent, rounded to nearest whole number, divided by 100 and multipled by max_hashes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="perc_bar_drawer.h" line="26" column="5" bodyfile="perc_bar_drawer.c" bodystart="72" bodyend="75" declfile="perc_bar_drawer.h" declline="26" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="perc__bar__drawer_8h_1a30d2bd6191369aad6876d21dd6ef0880" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fill_in_perc_bar</definition>
        <argsstring>(char *buf, Percbar_Info *pb_info)</argsstring>
        <name>fill_in_perc_bar</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="structPercbar__Info" kindref="compound">Percbar_Info</ref> *</type>
          <declname>pb_info</declname>
        </param>
        <briefdescription>
<para>Given <ref refid="structPercbar__Info" kindref="compound">Percbar_Info</ref> struct, draws the percent bar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to write into </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pb_info</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structPercbar__Info" kindref="compound">Percbar_Info</ref> struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="perc_bar_drawer.h" line="27" column="6" bodyfile="perc_bar_drawer.c" bodystart="83" bodyend="91" declfile="perc_bar_drawer.h" declline="27" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="perc__bar__drawer_8h_1a212af0061bc5446d0c557e370edf72c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void make_bar</definition>
        <argsstring>(char *buf, Percbar_Info *pb_info)</argsstring>
        <name>make_bar</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="structPercbar__Info" kindref="compound">Percbar_Info</ref> *</type>
          <declname>pb_info</declname>
        </param>
        <briefdescription>
<para>Writes the. </para>
        </briefdescription>
        <detaileddescription>
<para><preformatted>[###----]</preformatted> part of the percent bar</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to write into </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pb_info</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structPercbar__Info" kindref="compound">Percbar_Info</ref> struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="perc_bar_drawer.h" line="28" column="6" bodyfile="perc_bar_drawer.c" bodystart="99" bodyend="106" declfile="perc_bar_drawer.h" declline="28" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="perc__bar__drawer_8h_1af8586abbe2c26daaecec5bec42646045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add_percent_string</definition>
        <argsstring>(char *buf, Percbar_Info *pb_info)</argsstring>
        <name>add_percent_string</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="structPercbar__Info" kindref="compound">Percbar_Info</ref> *</type>
          <declname>pb_info</declname>
        </param>
        <briefdescription>
<para>Writes the. </para>
        </briefdescription>
        <detaileddescription>
<para><preformatted> ab.c% </preformatted> part of the percent bar</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to write into </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pb_info</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structPercbar__Info" kindref="compound">Percbar_Info</ref> struct</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Found out format for formatted float from <ulink url="https://stackoverflow.com/questions/1343890/how-do-i-restrict-a-float-value-to-only-two-places-after-the-decimal-point-in-c">https://stackoverflow.com/questions/1343890/how-do-i-restrict-a-float-value-to-only-two-places-after-the-decimal-point-in-c</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="perc_bar_drawer.h" line="29" column="6" bodyfile="perc_bar_drawer.c" bodystart="116" bodyend="121" declfile="perc_bar_drawer.h" declline="29" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_PERC_BAR_DRAWER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_PERC_BAR_DRAWER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="structPercbar__Info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="structPercbar__Info_1ae2af1ac3a5dc152b378711922fce3d26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structPercbar__Info_1ae2af1ac3a5dc152b378711922fce3d26" kindref="member">safe_percent</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="structPercbar__Info_1abe5b5845d05355307b21bc5859b3d837" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structPercbar__Info_1abe5b5845d05355307b21bc5859b3d837" kindref="member">max_hashes</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="structPercbar__Info_1a9d89dad65290af9f6df9faf000311a26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structPercbar__Info_1a9d89dad65290af9f6df9faf000311a26" kindref="member">num_of_hashes</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}<sp/><ref refid="structPercbar__Info" kindref="compound">Percbar_Info</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw_percbar(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frac);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>get_safe_percent_from(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frac);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_num_of_hashes_from(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>safe_percent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_hashes);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fill_in_perc_bar(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/><ref refid="structPercbar__Info" kindref="compound">Percbar_Info</ref><sp/>*pb_info);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>make_bar(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/><ref refid="structPercbar__Info" kindref="compound">Percbar_Info</ref><sp/>*pb_info);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add_percent_string(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/><ref refid="structPercbar__Info" kindref="compound">Percbar_Info</ref><sp/>*pb_info);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="perc_bar_drawer.h"/>
  </compounddef>
</doxygen>
